from unittest import TestCase, main
from main import text_stat


class MyTestCase(TestCase):
    def test(self):
        self.assertEqual(text_stat("test.txt"),
                         {'A': (2, 2),
                          'D': (2, 2),
                          'H': (2, 2),
                          'M': (1, 1),
                          'S': (4, 4),
                          'T': (2, 2),
                          'W': (3, 3),
                          'a': (18, 18),
                          'b': (7, 7),
                          'bilingual_word_amount': 1,
                          'c': (7, 7),
                          'd': (7, 7),
                          'e': (28, 23),
                          'f': (4, 4),
                          'g': (4, 4),
                          'h': (22, 20),
                          'i': (11, 10),
                          'j': (1, 1),
                          'k': (2, 2),
                          'l': (18, 14),
                          'm': (7, 6),
                          'n': (11, 11),
                          'o': (24, 23),
                          'p': (4, 4),
                          'paragraph_amount': 2,
                          'r': (15, 13),
                          's': (25, 19),
                          't': (32, 29),
                          'u': (10, 9),
                          'w': (10, 10),
                          'word_amount': 60,
                          'y': (5, 5),
                          'х': (1, 1)})
        self.assertEqual(text_stat("testBig1.txt"),
                         {'I': (1, 1),
                          'bilingual_word_amount': 0,
                          'paragraph_amount': 12,
                          'word_amount': 1053,
                          'В': (8, 8),
                          'Г': (4, 4),
                          'Д': (8, 8),
                          'Е': (3, 3),
                          'З': (2, 2),
                          'И': (5, 5),
                          'К': (5, 5),
                          'М': (5, 5),
                          'Н': (9, 9),
                          'О': (6, 6),
                          'П': (8, 8),
                          'Р': (1, 1),
                          'С': (2, 2),
                          'Т': (3, 3),
                          'У': (1, 1),
                          'Э': (3, 3),
                          'а': (419, 344),
                          'б': (101, 99),
                          'в': (233, 218),
                          'г': (105, 102),
                          'д': (168, 166),
                          'е': (451, 364),
                          'ж': (65, 65),
                          'з': (74, 73),
                          'и': (427, 369),
                          'й': (80, 77),
                          'к': (197, 170),
                          'л': (224, 212),
                          'м': (149, 141),
                          'н': (359, 296),
                          'о': (602, 470),
                          'п': (147, 143),
                          'р': (228, 222),
                          'с': (272, 247),
                          'т': (332, 304),
                          'у': (182, 167),
                          'ф': (9, 9),
                          'х': (73, 71),
                          'ц': (24, 24),
                          'ч': (82, 80),
                          'ш': (40, 37),
                          'щ': (26, 26),
                          'ы': (121, 117),
                          'ь': (99, 99),
                          'э': (6, 6),
                          'ю': (33, 32),
                          'я': (92, 88),
                          'ё': (1, 1)})
        self.assertEqual(text_stat("test2.txt"),
                         {'A': (2, 2),
                          'D': (2, 2),
                          'H': (2, 2),
                          'M': (1, 1),
                          'S': (4, 4),
                          'T': (2, 2),
                          'W': (3, 3),
                          'a': (19, 19),
                          'b': (7, 7),
                          'bilingual_word_amount': 12,
                          'c': (7, 7),
                          'd': (7, 7),
                          'e': (27, 23),
                          'f': (5, 5),
                          'g': (4, 4),
                          'h': (22, 20),
                          'i': (11, 10),
                          'j': (1, 1),
                          'k': (2, 2),
                          'l': (18, 14),
                          'm': (7, 6),
                          'n': (11, 11),
                          'o': (24, 23),
                          'p': (4, 4),
                          'paragraph_amount': 2,
                          'r': (15, 14),
                          's': (25, 19),
                          't': (32, 29),
                          'u': (10, 9),
                          'w': (10, 10),
                          'word_amount': 64,
                          'y': (5, 5),
                          'а': (3, 2),
                          'в': (5, 4),
                          'к': (4, 3),
                          'п': (5, 5),
                          'у': (1, 1),
                          'ф': (4, 4),
                          'х': (1, 1),
                          'ц': (2, 2),
                          'ы': (4, 4)})

    def testErrors(self):
        self.assertEqual(text_stat("testNULL.txt"),
                         {'bilingual_word_amount': 0,
                          'paragraph_amount': 0,
                          'word_amount': 0})
        self.assertEqual(text_stat(""),
                         {'bilingual_word_amount': 0,
                         'error': 'File not found',
                         'paragraph_amount': 0,
                         'word_amount': 0})
        self.assertEqual(text_stat("Chehov.txt"),
                         {'bilingual_word_amount': 0,
                         'error': 'Wrong codec, program can decode only utf-8 and txt format',
                         'paragraph_amount': 0,
                         'word_amount': 0})
        self.assertEqual(text_stat("тестовое_python.pdf"),
                         {'bilingual_word_amount': 0,
                          'error': 'Wrong codec, program can decode only utf-8 and txt format',
                          'paragraph_amount': 0,
                          'word_amount': 0})


if __name__ == '__main__':
    main()
